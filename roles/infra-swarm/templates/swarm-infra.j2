version: '3.7'
services:
  postgres:
    image: postgres:{{ postgres_container_tag|default('14.1') }} 
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    volumes:
      - {{ postgres_container_volume }}:/var/lib/postgresql/data
    command: postgres -c max_connections=300
    environment:
      - POSTGRES_DB={{ postgres_db }}
      - POSTGRES_USER={{ postgres_user }}
      - POSTGRES_PASSWORD={{ postgres_psw }}
    networks:
      - postgres_network
      - keycloak_network

  jaeger:
    image: {{ jaeger_image|default('jaegertracing/all-in-one:latest') }} 
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - services_network
      - {{ traefik_network_name }}
    deploy:
      replicas: 1
      labels:
        # Enable traefik for this service
        - "traefik.enable=true"
        - "traefik.http.routers.jaeger{{ swarm_stack_name }}.rule=Host(`jaeger.{{ swarm_stack_name }}.{{ domain|default('localhost') }}`)"
        - "traefik.http.services.jaeger{{ swarm_stack_name }}-service.loadbalancer.server.port=16686"
  
  kafka:
    image: bitnami/kafka:{{ kafka_container_tag|default('latest') }}
    # ports:
    #   - '9092:9092'
    deploy:
    #  resources:
    #    limits:
    #      cpus: "1.5"
    #      memory: "2GB"
      replicas: 1
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
    networks:
      - kafka_network
  
  keycloak:
    image: {{ keycloak_docker_image|default('claudiooak/keycloak:21.1')}}
    deploy:
    #  resources:
    #    limits:
    #      cpus: "1.0"
    #      memory: "500M"
      replicas: 1
      labels:
        # Enable traefik for this service
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak{{ swarm_stack_name }}.rule=Host(`keycloak.{{ swarm_stack_name }}.{{ domain|default('localhost') }}`)"
        - "traefik.http.services.keycloak{{ swarm_stack_name }}-service.loadbalancer.server.port=80"
    command:
      - --verbose start --http-port=80
      - --hostname=keycloak.{{ swarm_stack_name }}.{{ domain|default('localhost') }}
    environment:
      - KEYCLOAK_ADMIN={{ keycloak_admin_user }}
      - KEYCLOAK_ADMIN_PASSWORD={{ keycloak_admin_password }}
      # Enable HTTP:
      - KC_HTTP_ENABLED=true
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/{{ postgres_db }}
      - KC_DB_USERNAME={{ postgres_user }}
      - KC_DB_PASSWORD={{ postgres_psw }}
      - KC_DB_SCHEMA=public
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false

    #ports:
    #  - 8443:8443
    ## for console
    #  - 8080:8080
    networks:
      - keycloak_network
      - postgres_network
      - {{ traefik_network_name }} 

networks:
  kafka_network:
  postgres_network:
  services_network:
  keycloak_network:
  {{traefik_network_name}}:
    #  If we want traefik to be able to proxy to multiple stacks we need to have one external network!!
    external: true

volumes:
  {{ postgres_container_volume }}:
    driver: local